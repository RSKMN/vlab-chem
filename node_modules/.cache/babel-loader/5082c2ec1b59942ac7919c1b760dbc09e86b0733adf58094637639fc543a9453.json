{"ast":null,"code":"var _jsxFileName = \"/media/rskmn/D864320D6431EF3E/rskmn/theBendu/hackathons/felicity@iiith/work/lab-new/vlab-chem/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport ChemistryWorkspace from './components/ChemistryWorkspace';\nimport ReactionDisplay from './components/ReactionDisplay';\nimport StepControls from './components/StepControls';\n\n/**\n * SAMPLE: apparatusImages for known apparatus names. \n * If the experiment says \"Beaker\", we can map to a beaker image. \n * Add more as needed.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apparatusImages = {\n  Beaker: \"https://m.media-amazon.com/images/I/61bEbTCHV5L._AC_UF1000,1000_QL80_.jpg\",\n  Flask: \"https://www.sigmaaldrich.com/deepweb/assets/sigmaaldrich/product/images/207/642/d8e1bdca-bbcc-4545-a7ca-d30498020451/640/d8e1bdca-bbcc-4545-a7ca-d30498020451.jpg\"\n};\nfunction App() {\n  _s();\n  const [experiment, setExperiment] = useState(null);\n  const [workspaceItems, setWorkspaceItems] = useState([]);\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  // For stepping backward, store a \"history\" of workspace states\n  const [history, setHistory] = useState([]);\n\n  // Load experiment from local file (JSON) or via fetch\n  // For simplicity, we'll do a file input:\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = evt => {\n        try {\n          const parsed = JSON.parse(evt.target.result);\n          setExperiment(parsed);\n          setCurrentStepIndex(0);\n          setWorkspaceItems([]);\n          setHistory([]);\n        } catch (err) {\n          console.error(\"Error parsing JSON:\", err);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  /**\n   * \"applyStep\" applies a single step to the workspace.\n   * e.g., bringApparatus, addChemical, mix, etc.\n   */\n  const applyStep = step => {\n    switch (step.action) {\n      case \"bringApparatus\":\n        {\n          // e.g. { action: \"bringApparatus\", name: \"Beaker\", countLabel: 1 }\n          // We build a label like \"Beaker-1\"\n          const labelCount = step.countLabel || 1;\n          const apparatusLabel = `${step.name}-${labelCount}`;\n          const imageSrc = apparatusImages[step.name] || \"https://via.placeholder.com/50\";\n          const newItem = {\n            id: Date.now(),\n            name: apparatusLabel,\n            imageSrc,\n            type: \"apparatus\",\n            properties: {\n              position: {\n                x: 50,\n                y: 50\n              },\n              contents: {\n                chemical: \"\",\n                amount: 0,\n                unit: \"\",\n                color: \"\"\n              }\n            }\n          };\n          setWorkspaceItems(prev => [...prev, newItem]);\n          break;\n        }\n      case \"addChemical\":\n        {\n          // e.g. { action: \"addChemical\", apparatusName: \"Beaker-1\", chemical: \"HCl\", amount: 50, unit: \"ml\" }\n          setWorkspaceItems(prev => prev.map(item => {\n            if (item.name === step.apparatusName) {\n              return {\n                ...item,\n                properties: {\n                  ...item.properties,\n                  contents: {\n                    chemical: step.chemical,\n                    amount: step.amount,\n                    unit: step.unit,\n                    color: \"#999\" // or some default\n                  }\n                }\n              };\n            }\n            return item;\n          }));\n          break;\n        }\n      case \"mix\":\n        {\n          // e.g. { action: \"mix\", apparatusName: \"Beaker-1\" }\n          console.log(\"Mixing contents in\", step.apparatusName);\n          // You can do more advanced logic or animations here.\n          break;\n        }\n      // Add more actions like \"transfer\" or \"heat\" as needed\n      default:\n        console.warn(\"Unknown action:\", step.action);\n    }\n  };\n\n  /**\n   * \"unapplyStep\" reverts the last step (for going backwards).\n   * Simplest approach: store full states in \"history\" and revert to a previous snapshot.\n   * We won't do step-by-step \"undo\" logic here, just revert from history.\n   */\n  const unapplyStep = index => {\n    // Revert to the workspace state at \"index\" in history\n    const prevState = history[index];\n    if (prevState) {\n      setWorkspaceItems(prevState);\n    }\n  };\n\n  // Move forward one step\n  const handleNext = () => {\n    if (!experiment || !experiment.steps) return;\n    // Save current workspace to history\n    setHistory(prev => [...prev, workspaceItems]);\n    const nextIndex = currentStepIndex + 1;\n    if (nextIndex < experiment.steps.length) {\n      const step = experiment.steps[nextIndex];\n      applyStep(step);\n      setCurrentStepIndex(nextIndex);\n    }\n  };\n\n  // Move backward one step\n  const handlePrevious = () => {\n    if (currentStepIndex <= 0) return;\n    // We'll revert to the workspace state in history at currentStepIndex - 1\n    const prevIndex = currentStepIndex - 1;\n    unapplyStep(prevIndex);\n    setCurrentStepIndex(prevIndex);\n    // Also remove the last snapshot from history\n    setHistory(prev => prev.slice(0, -1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      experimentName: experiment ? experiment.experimentName : \"No Experiment Loaded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".json\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), experiment && /*#__PURE__*/_jsxDEV(StepControls, {\n      currentStepIndex: currentStepIndex,\n      totalSteps: experiment.steps.length,\n      onPrev: handlePrevious,\n      onNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(ReactionDisplay, {\n        workspaceItems: workspaceItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChemistryWorkspace, {\n        items: workspaceItems,\n        onSelectItem: () => {},\n        removeItem: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fSo2r7ItXEa3EaG3BrIMgUB3Yzc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TopBar","ChemistryWorkspace","ReactionDisplay","StepControls","jsxDEV","_jsxDEV","apparatusImages","Beaker","Flask","App","_s","experiment","setExperiment","workspaceItems","setWorkspaceItems","currentStepIndex","setCurrentStepIndex","history","setHistory","handleFileUpload","e","file","target","files","reader","FileReader","onload","evt","parsed","JSON","parse","result","err","console","error","readAsText","applyStep","step","action","labelCount","countLabel","apparatusLabel","name","imageSrc","newItem","id","Date","now","type","properties","position","x","y","contents","chemical","amount","unit","color","prev","map","item","apparatusName","log","warn","unapplyStep","index","prevState","handleNext","steps","nextIndex","length","handlePrevious","prevIndex","slice","className","children","experimentName","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","totalSteps","onPrev","onNext","items","onSelectItem","removeItem","_c","$RefreshReg$"],"sources":["/media/rskmn/D864320D6431EF3E/rskmn/theBendu/hackathons/felicity@iiith/work/lab-new/vlab-chem/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport ChemistryWorkspace from './components/ChemistryWorkspace';\nimport ReactionDisplay from './components/ReactionDisplay';\nimport StepControls from './components/StepControls';\n\n/**\n * SAMPLE: apparatusImages for known apparatus names. \n * If the experiment says \"Beaker\", we can map to a beaker image. \n * Add more as needed.\n */\nconst apparatusImages = {\n  Beaker: \"https://m.media-amazon.com/images/I/61bEbTCHV5L._AC_UF1000,1000_QL80_.jpg\",\n  Flask: \"https://www.sigmaaldrich.com/deepweb/assets/sigmaaldrich/product/images/207/642/d8e1bdca-bbcc-4545-a7ca-d30498020451/640/d8e1bdca-bbcc-4545-a7ca-d30498020451.jpg\"\n};\n\nfunction App() {\n  const [experiment, setExperiment] = useState(null);\n  const [workspaceItems, setWorkspaceItems] = useState([]);\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  // For stepping backward, store a \"history\" of workspace states\n  const [history, setHistory] = useState([]);\n\n  // Load experiment from local file (JSON) or via fetch\n  // For simplicity, we'll do a file input:\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (evt) => {\n        try {\n          const parsed = JSON.parse(evt.target.result);\n          setExperiment(parsed);\n          setCurrentStepIndex(0);\n          setWorkspaceItems([]);\n          setHistory([]);\n        } catch (err) {\n          console.error(\"Error parsing JSON:\", err);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  /**\n   * \"applyStep\" applies a single step to the workspace.\n   * e.g., bringApparatus, addChemical, mix, etc.\n   */\n  const applyStep = (step) => {\n    switch (step.action) {\n      case \"bringApparatus\": {\n        // e.g. { action: \"bringApparatus\", name: \"Beaker\", countLabel: 1 }\n        // We build a label like \"Beaker-1\"\n        const labelCount = step.countLabel || 1;\n        const apparatusLabel = `${step.name}-${labelCount}`;\n        const imageSrc = apparatusImages[step.name] || \"https://via.placeholder.com/50\";\n\n        const newItem = {\n          id: Date.now(),\n          name: apparatusLabel,\n          imageSrc,\n          type: \"apparatus\",\n          properties: {\n            position: { x: 50, y: 50 },\n            contents: { chemical: \"\", amount: 0, unit: \"\", color: \"\" }\n          }\n        };\n        setWorkspaceItems((prev) => [...prev, newItem]);\n        break;\n      }\n      case \"addChemical\": {\n        // e.g. { action: \"addChemical\", apparatusName: \"Beaker-1\", chemical: \"HCl\", amount: 50, unit: \"ml\" }\n        setWorkspaceItems((prev) =>\n          prev.map((item) => {\n            if (item.name === step.apparatusName) {\n              return {\n                ...item,\n                properties: {\n                  ...item.properties,\n                  contents: {\n                    chemical: step.chemical,\n                    amount: step.amount,\n                    unit: step.unit,\n                    color: \"#999\" // or some default\n                  }\n                }\n              };\n            }\n            return item;\n          })\n        );\n        break;\n      }\n      case \"mix\": {\n        // e.g. { action: \"mix\", apparatusName: \"Beaker-1\" }\n        console.log(\"Mixing contents in\", step.apparatusName);\n        // You can do more advanced logic or animations here.\n        break;\n      }\n      // Add more actions like \"transfer\" or \"heat\" as needed\n      default:\n        console.warn(\"Unknown action:\", step.action);\n    }\n  };\n\n  /**\n   * \"unapplyStep\" reverts the last step (for going backwards).\n   * Simplest approach: store full states in \"history\" and revert to a previous snapshot.\n   * We won't do step-by-step \"undo\" logic here, just revert from history.\n   */\n  const unapplyStep = (index) => {\n    // Revert to the workspace state at \"index\" in history\n    const prevState = history[index];\n    if (prevState) {\n      setWorkspaceItems(prevState);\n    }\n  };\n\n  // Move forward one step\n  const handleNext = () => {\n    if (!experiment || !experiment.steps) return;\n    // Save current workspace to history\n    setHistory((prev) => [...prev, workspaceItems]);\n\n    const nextIndex = currentStepIndex + 1;\n    if (nextIndex < experiment.steps.length) {\n      const step = experiment.steps[nextIndex];\n      applyStep(step);\n      setCurrentStepIndex(nextIndex);\n    }\n  };\n\n  // Move backward one step\n  const handlePrevious = () => {\n    if (currentStepIndex <= 0) return;\n    // We'll revert to the workspace state in history at currentStepIndex - 1\n    const prevIndex = currentStepIndex - 1;\n    unapplyStep(prevIndex);\n    setCurrentStepIndex(prevIndex);\n    // Also remove the last snapshot from history\n    setHistory((prev) => prev.slice(0, -1));\n  };\n\n  return (\n    <div className=\"App\">\n      <TopBar experimentName={experiment ? experiment.experimentName : \"No Experiment Loaded\"} />\n      {/* Input to load JSON experiment file */}\n      <input type=\"file\" accept=\".json\" onChange={handleFileUpload} />\n\n      {/* If experiment is loaded, show step controls for simulation mode */}\n      {experiment && (\n        <StepControls\n          currentStepIndex={currentStepIndex}\n          totalSteps={experiment.steps.length}\n          onPrev={handlePrevious}\n          onNext={handleNext}\n        />\n      )}\n\n      <div className=\"main-container\">\n        <ReactionDisplay workspaceItems={workspaceItems} />\n        <ChemistryWorkspace \n          items={workspaceItems}\n          onSelectItem={() => {}}\n          removeItem={() => {}}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}