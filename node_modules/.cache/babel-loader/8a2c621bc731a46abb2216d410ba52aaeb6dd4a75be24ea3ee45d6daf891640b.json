{"ast":null,"code":"var _jsxFileName = \"/media/rskmn/D864320D6431EF3E/rskmn/theBendu/hackathons/felicity@iiith/git/vlab-chem/src/components/ChemistryWorkspace.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ChemistryWorkspace.css\";\n\n// ... your known apparatus and chemicals here ...\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChemistryWorkspace = ({\n  experiment\n}) => {\n  _s();\n  // ... your existing logic for merging known items ...\n\n  // For demonstration, let's keep the default or passed-in experiment steps\n  const [parsedSteps, setParsedSteps] = useState([]);\n  useEffect(() => {\n    // Example fallback if `experiment` is undefined\n    if (!experiment || !experiment.steps) {\n      setParsedSteps([]);\n      return;\n    }\n\n    // Example of merging known items (simplified):\n    const updatedSteps = experiment.steps.map(step => step);\n    setParsedSteps(updatedSteps);\n  }, [experiment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chemistry-workspace\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chemistry-lab-banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chemistry Lab Workspace (Simulation Mode)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chemistry-lab-instructions\",\n        children: \"Use Previous/Next to step through the experiment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chemistry-lab-content\",\n      children: parsedSteps.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No steps found in this experiment.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this) : parsedSteps.map((step, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step-card\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Action:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 18\n          }, this), \" \", step.action]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ChemistryWorkspace, \"eEiNZoLlz329R7i2ByxbHttseR8=\");\n_c = ChemistryWorkspace;\nexport default ChemistryWorkspace;\nvar _c;\n$RefreshReg$(_c, \"ChemistryWorkspace\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ChemistryWorkspace","experiment","_s","parsedSteps","setParsedSteps","steps","updatedSteps","map","step","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","idx","action","_c","$RefreshReg$"],"sources":["/media/rskmn/D864320D6431EF3E/rskmn/theBendu/hackathons/felicity@iiith/git/vlab-chem/src/components/ChemistryWorkspace.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ChemistryWorkspace.css\";\n\n// ... your known apparatus and chemicals here ...\n\nconst ChemistryWorkspace = ({ experiment }) => {\n  // ... your existing logic for merging known items ...\n\n  // For demonstration, let's keep the default or passed-in experiment steps\n  const [parsedSteps, setParsedSteps] = useState([]);\n\n  useEffect(() => {\n    // Example fallback if `experiment` is undefined\n    if (!experiment || !experiment.steps) {\n      setParsedSteps([]);\n      return;\n    }\n\n    // Example of merging known items (simplified):\n    const updatedSteps = experiment.steps.map((step) => step);\n    setParsedSteps(updatedSteps);\n  }, [experiment]);\n\n  return (\n    <div className=\"chemistry-workspace\">\n      {/* BANNER / HEADER SECTION */}\n      <div className=\"chemistry-lab-banner\">\n        <h2>Chemistry Lab Workspace (Simulation Mode)</h2>\n        <p className=\"chemistry-lab-instructions\">\n          Use Previous/Next to step through the experiment.\n        </p>\n      </div>\n\n      {/* MAIN CONTENT PANEL */}\n      <div className=\"chemistry-lab-content\">\n        {/* Render your steps (or “No steps found” if empty) */}\n        {parsedSteps.length === 0 ? (\n          <p>No steps found in this experiment.</p>\n        ) : (\n          parsedSteps.map((step, idx) => (\n            <div key={idx} className=\"step-card\">\n              <p><strong>Action:</strong> {step.action}</p>\n              {/* Render apparatus/chemicals info, etc. */}\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChemistryWorkspace;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC7C;;EAEA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACK,UAAU,IAAI,CAACA,UAAU,CAACI,KAAK,EAAE;MACpCD,cAAc,CAAC,EAAE,CAAC;MAClB;IACF;;IAEA;IACA,MAAME,YAAY,GAAGL,UAAU,CAACI,KAAK,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC;IACzDJ,cAAc,CAACE,YAAY,CAAC;EAC9B,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAKU,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAElCX,OAAA;MAAKU,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCX,OAAA;QAAAW,QAAA,EAAI;MAAyC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDf,OAAA;QAAGU,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAE1C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNf,OAAA;MAAKU,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAEnCP,WAAW,CAACY,MAAM,KAAK,CAAC,gBACvBhB,OAAA;QAAAW,QAAA,EAAG;MAAkC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEzCX,WAAW,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEQ,GAAG,kBACxBjB,OAAA;QAAeU,SAAS,EAAC,WAAW;QAAAC,QAAA,eAClCX,OAAA;UAAAW,QAAA,gBAAGX,OAAA;YAAAW,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACN,IAAI,CAACS,MAAM;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADrCE,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CACN;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CA5CIF,kBAAkB;AAAAkB,EAAA,GAAlBlB,kBAAkB;AA8CxB,eAAeA,kBAAkB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}