{"ast":null,"code":"var _jsxFileName = \"/media/rskmn/D864320D6431EF3E/rskmn/theBendu/hackathons/felicity@iiith/git/vlab-chem/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport ChemistryWorkspace from './components/ChemistryWorkspace';\nimport ReactionDisplay from './components/ReactionDisplay';\nimport StepControls from './components/StepControls';\nimport experimentsData from './data/experiments.json';\n\n// Mapping for apparatus images\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apparatusImages = {\n  Beaker: \"https://m.media-amazon.com/images/I/61bEbTCHV5L._AC_UF1000,1000_QL80_.jpg\",\n  Flask: \"https://www.sigmaaldrich.com/deepweb/assets/sigmaaldrich/product/images/207/642/d8e1bdca-bbcc-4545-a7ca-d30498020451/640/d8e1bdca-bbcc-4545-a7ca-d30498020451.jpg\",\n  \"Bunsen Burner\": \"https://d2cbg94ubxgsnp.cloudfront.net/Pictures/280xAny/7/9/8/127798_classic-kit-200_tcm18-99904.jpg\"\n};\nfunction App() {\n  _s();\n  var _experiment$steps;\n  const [experiment, setExperiment] = useState(null);\n  const [workspaceItems, setWorkspaceItems] = useState([]);\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [selectedExperimentId, setSelectedExperimentId] = useState(\"\");\n  useEffect(() => {\n    // Reset state on mount\n    setWorkspaceItems([]);\n    setCurrentStepIndex(0);\n    setHistory([]);\n  }, []);\n\n  // Handle experiment selection from dropdown\n  const handleExperimentSelection = e => {\n    const expId = e.target.value;\n    setSelectedExperimentId(expId);\n    const selectedExp = experimentsData.experiments.find(exp => exp.experimentId === expId);\n    setExperiment(selectedExp);\n    setWorkspaceItems([]);\n    setCurrentStepIndex(0);\n    setHistory([]);\n  };\n\n  // Apply a single step to the workspace\n  const applyStep = step => {\n    switch (step.action) {\n      case \"bringApparatus\":\n        {\n          // Create a unique label: e.g. \"Beaker-1\"\n          const labelCount = step.countLabel || 1;\n          const apparatusLabel = `${step.name}-${labelCount}`;\n          const imageSrc = apparatusImages[step.name] || \"https://via.placeholder.com/50\";\n          const newItem = {\n            id: Date.now(),\n            name: apparatusLabel,\n            imageSrc,\n            type: \"apparatus\",\n            chemicals: [],\n            properties: {\n              position: {\n                x: 50,\n                y: 50\n              },\n              // Use step.color for border color\n              color: step.color || \"#aaa\"\n            }\n          };\n          setWorkspaceItems(prev => [...prev, newItem]);\n          break;\n        }\n      case \"addChemical\":\n        {\n          // Find the matching apparatus and add chemical to its array\n          setWorkspaceItems(prev => prev.map(item => {\n            if (item.name === step.apparatusName) {\n              const newChem = {\n                name: step.chemical,\n                amount: step.amount,\n                unit: step.unit,\n                color: step.color || \"#999\"\n              };\n              return {\n                ...item,\n                chemicals: [...item.chemicals, newChem]\n              };\n            }\n            return item;\n          }));\n          break;\n        }\n      case \"mix\":\n        {\n          // For mix, you can transform the contents; for demonstration, we simply log mixing.\n          // Optionally, you can change the chemicals array to reflect a reaction.\n          console.log(`Mixing contents in ${step.apparatusName}`);\n          // For example, if in Beaker-1 the chemicals are HCl and NaOH, you might want:\n          setWorkspaceItems(prev => prev.map(item => {\n            if (item.name === step.apparatusName) {\n              // For demonstration: replace all chemicals with a product reaction\n              return {\n                ...item,\n                chemicals: [{\n                  name: \"NaCl\",\n                  amount: 100,\n                  unit: \"ml\",\n                  color: \"#ccc\"\n                }, {\n                  name: \"H2O\",\n                  amount: 100,\n                  unit: \"ml\",\n                  color: \"#9cf\"\n                }]\n              };\n            }\n            return item;\n          }));\n          break;\n        }\n      default:\n        console.warn(\"Unknown action:\", step.action);\n    }\n  };\n\n  // Revert to previous workspace state\n  const unapplyStep = index => {\n    const prevState = history[index];\n    if (prevState) {\n      setWorkspaceItems(prevState);\n    }\n  };\n\n  // Next step: store current state, apply next step, then increment index\n  const handleNext = () => {\n    if (!experiment || !experiment.steps) return;\n    if (currentStepIndex >= experiment.steps.length) return;\n    setHistory(prev => [...prev, workspaceItems]);\n    const step = experiment.steps[currentStepIndex];\n    applyStep(step);\n    setCurrentStepIndex(prev => prev + 1);\n  };\n\n  // Previous step: revert to previous state\n  const handlePrevious = () => {\n    if (currentStepIndex <= 0) return;\n    const prevIndex = currentStepIndex - 1;\n    unapplyStep(prevIndex);\n    setCurrentStepIndex(prevIndex);\n    setHistory(prev => prev.slice(0, -1));\n  };\n  const safeStep = (experiment === null || experiment === void 0 ? void 0 : (_experiment$steps = experiment.steps) === null || _experiment$steps === void 0 ? void 0 : _experiment$steps[currentStepIndex - 1]) || {\n    number: 0,\n    name: \"N/A\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      experimentName: experiment ? experiment.experimentName : \"No Experiment Loaded\",\n      currentStep: safeStep\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"experiment-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"experiment-select\",\n        children: \"Choose an Experiment: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"experiment-select\",\n        value: selectedExperimentId,\n        onChange: handleExperimentSelection,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), experimentsData.experiments.map(exp => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: exp.experimentId,\n          children: exp.experimentName\n        }, exp.experimentId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), experiment && /*#__PURE__*/_jsxDEV(StepControls, {\n      currentStepIndex: currentStepIndex,\n      totalSteps: experiment.steps.length,\n      onPrev: handlePrevious,\n      onNext: handleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(ReactionDisplay, {\n        workspaceItems: workspaceItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChemistryWorkspace, {\n        items: workspaceItems,\n        onSelectItem: () => {},\n        removeItem: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7gK2wfvpJR2OcnEq8EckvkyfbLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TopBar","ChemistryWorkspace","ReactionDisplay","StepControls","experimentsData","jsxDEV","_jsxDEV","apparatusImages","Beaker","Flask","App","_s","_experiment$steps","experiment","setExperiment","workspaceItems","setWorkspaceItems","currentStepIndex","setCurrentStepIndex","history","setHistory","selectedExperimentId","setSelectedExperimentId","handleExperimentSelection","e","expId","target","value","selectedExp","experiments","find","exp","experimentId","applyStep","step","action","labelCount","countLabel","apparatusLabel","name","imageSrc","newItem","id","Date","now","type","chemicals","properties","position","x","y","color","prev","map","item","apparatusName","newChem","chemical","amount","unit","console","log","warn","unapplyStep","index","prevState","handleNext","steps","length","handlePrevious","prevIndex","slice","safeStep","number","className","children","experimentName","currentStep","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","totalSteps","onPrev","onNext","items","onSelectItem","removeItem","_c","$RefreshReg$"],"sources":["/media/rskmn/D864320D6431EF3E/rskmn/theBendu/hackathons/felicity@iiith/git/vlab-chem/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport ChemistryWorkspace from './components/ChemistryWorkspace';\nimport ReactionDisplay from './components/ReactionDisplay';\nimport StepControls from './components/StepControls';\nimport experimentsData from './data/experiments.json';\n\n// Mapping for apparatus images\nconst apparatusImages = {\n  Beaker: \"https://m.media-amazon.com/images/I/61bEbTCHV5L._AC_UF1000,1000_QL80_.jpg\",\n  Flask: \"https://www.sigmaaldrich.com/deepweb/assets/sigmaaldrich/product/images/207/642/d8e1bdca-bbcc-4545-a7ca-d30498020451/640/d8e1bdca-bbcc-4545-a7ca-d30498020451.jpg\",\n  \"Bunsen Burner\": \"https://d2cbg94ubxgsnp.cloudfront.net/Pictures/280xAny/7/9/8/127798_classic-kit-200_tcm18-99904.jpg\"\n};\n\nfunction App() {\n  const [experiment, setExperiment] = useState(null);\n  const [workspaceItems, setWorkspaceItems] = useState([]);\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n  const [history, setHistory] = useState([]);\n  const [selectedExperimentId, setSelectedExperimentId] = useState(\"\");\n\n  useEffect(() => {\n    // Reset state on mount\n    setWorkspaceItems([]);\n    setCurrentStepIndex(0);\n    setHistory([]);\n  }, []);\n\n  // Handle experiment selection from dropdown\n  const handleExperimentSelection = (e) => {\n    const expId = e.target.value;\n    setSelectedExperimentId(expId);\n    const selectedExp = experimentsData.experiments.find(exp => exp.experimentId === expId);\n    setExperiment(selectedExp);\n    setWorkspaceItems([]);\n    setCurrentStepIndex(0);\n    setHistory([]);\n  };\n\n  // Apply a single step to the workspace\n  const applyStep = (step) => {\n    switch (step.action) {\n      case \"bringApparatus\": {\n        // Create a unique label: e.g. \"Beaker-1\"\n        const labelCount = step.countLabel || 1;\n        const apparatusLabel = `${step.name}-${labelCount}`;\n        const imageSrc = apparatusImages[step.name] || \"https://via.placeholder.com/50\";\n        const newItem = {\n          id: Date.now(),\n          name: apparatusLabel,\n          imageSrc,\n          type: \"apparatus\",\n          chemicals: [],\n          properties: {\n            position: { x: 50, y: 50 },\n            // Use step.color for border color\n            color: step.color || \"#aaa\"\n          }\n        };\n        setWorkspaceItems(prev => [...prev, newItem]);\n        break;\n      }\n      case \"addChemical\": {\n        // Find the matching apparatus and add chemical to its array\n        setWorkspaceItems(prev =>\n          prev.map(item => {\n            if (item.name === step.apparatusName) {\n              const newChem = {\n                name: step.chemical,\n                amount: step.amount,\n                unit: step.unit,\n                color: step.color || \"#999\"\n              };\n              return {\n                ...item,\n                chemicals: [...item.chemicals, newChem]\n              };\n            }\n            return item;\n          })\n        );\n        break;\n      }\n      case \"mix\": {\n        // For mix, you can transform the contents; for demonstration, we simply log mixing.\n        // Optionally, you can change the chemicals array to reflect a reaction.\n        console.log(`Mixing contents in ${step.apparatusName}`);\n        // For example, if in Beaker-1 the chemicals are HCl and NaOH, you might want:\n        setWorkspaceItems(prev =>\n          prev.map(item => {\n            if (item.name === step.apparatusName) {\n              // For demonstration: replace all chemicals with a product reaction\n              return {\n                ...item,\n                chemicals: [\n                  { name: \"NaCl\", amount: 100, unit: \"ml\", color: \"#ccc\" },\n                  { name: \"H2O\", amount: 100, unit: \"ml\", color: \"#9cf\" }\n                ]\n              };\n            }\n            return item;\n          })\n        );\n        break;\n      }\n      default:\n        console.warn(\"Unknown action:\", step.action);\n    }\n  };\n\n  // Revert to previous workspace state\n  const unapplyStep = (index) => {\n    const prevState = history[index];\n    if (prevState) {\n      setWorkspaceItems(prevState);\n    }\n  };\n\n  // Next step: store current state, apply next step, then increment index\n  const handleNext = () => {\n    if (!experiment || !experiment.steps) return;\n    if (currentStepIndex >= experiment.steps.length) return;\n    setHistory(prev => [...prev, workspaceItems]);\n    const step = experiment.steps[currentStepIndex];\n    applyStep(step);\n    setCurrentStepIndex(prev => prev + 1);\n  };\n\n  // Previous step: revert to previous state\n  const handlePrevious = () => {\n    if (currentStepIndex <= 0) return;\n    const prevIndex = currentStepIndex - 1;\n    unapplyStep(prevIndex);\n    setCurrentStepIndex(prevIndex);\n    setHistory(prev => prev.slice(0, -1));\n  };\n\n  const safeStep = experiment?.steps?.[currentStepIndex - 1] || { number: 0, name: \"N/A\" };\n\n  return (\n    <div className=\"App\">\n      <TopBar \n        experimentName={experiment ? experiment.experimentName : \"No Experiment Loaded\"}\n        currentStep={safeStep}\n      />\n\n      {/* Experiment selection dropdown */}\n      <div className=\"experiment-selector\">\n        <label htmlFor=\"experiment-select\">Choose an Experiment: </label>\n        <select id=\"experiment-select\" value={selectedExperimentId} onChange={handleExperimentSelection}>\n          <option value=\"\">--Select--</option>\n          {experimentsData.experiments.map(exp => (\n            <option key={exp.experimentId} value={exp.experimentId}>\n              {exp.experimentName}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {experiment && (\n        <StepControls\n          currentStepIndex={currentStepIndex}\n          totalSteps={experiment.steps.length}\n          onPrev={handlePrevious}\n          onNext={handleNext}\n        />\n      )}\n\n      <div className=\"main-container\">\n        <ReactionDisplay workspaceItems={workspaceItems} />\n        <ChemistryWorkspace \n          items={workspaceItems}\n          onSelectItem={() => {}}\n          removeItem={() => {}}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}